version: '3'
services:

  postgres-db:
    image: postgres
    ports:
      - '5432:5432'
    env_file:
      - './dockerSecrets/db.env'
    networks:
      - leapx

  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    networks:
      - leapx

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - leapx

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - '9091:9091'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 9000000
    depends_on:
      - zookeeper
    networks:
      - leapx

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - leapx

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'no'
    ports:
      - '9099:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:9091'
    depends_on:
      - kafka
    networks:
      - leapx

networks:
  leapx:
    driver: bridge